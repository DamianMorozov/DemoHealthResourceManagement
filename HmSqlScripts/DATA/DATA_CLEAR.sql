------------------------------------------------------------------------------------------------------------------------
-- DATA_CLEAR
------------------------------------------------------------------------------------------------------------------------
SET NOCOUNT ON;
SET ANSI_NULLS ON;
SET QUOTED_IDENTIFIER ON;
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
PRINT N'[ ] SET TRANSACTION ISOLATION LEVEL READ COMMITTED';
DECLARE @DB_NAME_CUR VARCHAR(128) = NULL;
DECLARE @DB_NAME_DEV VARCHAR(128) = 'HRM_DEMO_DEV';
DECLARE @DB_NAME_PROD VARCHAR(128) = 'HRM_DEMO_PROD';
DECLARE @SCHEMA_REF_NAME VARCHAR(128) = 'REF';
DECLARE @SCHEMA_DIM_NAME VARCHAR(128) = 'DIM';
DECLARE @SCHEMA_REF_ID INT = (SELECT [SCHEMA_ID] FROM [SYS].[SCHEMAS] WHERE [NAME] = @SCHEMA_REF_NAME);
DECLARE @SCHEMA_DIM_ID INT = (SELECT [SCHEMA_ID] FROM [SYS].[SCHEMAS] WHERE [NAME] = @SCHEMA_DIM_NAME);
DECLARE @CMD NVARCHAR(MAX);
------------------------------------------------------------------------------------------------------------------------
DECLARE @IS_ACTION BIT = 1;
DECLARE @IS_COMMIT BIT = 1;
------------------------------------------------------------------------------------------------------------------------
IF (@IS_ACTION = 0) BEGIN
	PRINT N'[x] ACTION IS DISABLED';
END ELSE BEGIN
	BEGIN TRAN
	-- CHECK DB
	SET @DB_NAME_CUR = (SELECT DB_NAME());
	IF NOT (@DB_NAME_CUR = @DB_NAME_DEV OR @DB_NAME_CUR = @DB_NAME_PROD) BEGIN
		PRINT N'[x] CURRENT DB [' + @DB_NAME_CUR + '] IS NOT CORRECT';
	END ELSE BEGIN
		PRINT N'[✓] CURRENT DB [' + @DB_NAME_CUR + '] IS CORRECT';
		-- CLEAR [RECEPTIONS]
		IF EXISTS (SELECT 1 FROM [SYS].[TABLES] WHERE [SCHEMA_ID] = @SCHEMA_DIM_ID AND [name] = N'RECEPTIONS') BEGIN
			DELETE FROM [DIM].[RECEPTIONS];
			PRINT N'[✓] TABLE [' + @SCHEMA_DIM_NAME + '].[RECEPTIONS] WAS CLEARED: ' + CAST(@@rowcount AS VARCHAR) + ' ROWS WAS AFFECTED';
		END;
		-- CLEAR [DOCTORS]
		IF EXISTS (SELECT 1 FROM [SYS].[TABLES] WHERE [SCHEMA_ID] = @SCHEMA_REF_ID AND [name] = N'DOCTORS') BEGIN
			DELETE FROM [REF].[DOCTORS];
			PRINT N'[✓] TABLE [' + @SCHEMA_REF_NAME + '].[DOCTORS] WAS CLEARED: ' + CAST(@@rowcount AS VARCHAR) + ' ROWS WAS AFFECTED';
		END;
		-- CLEAR [PATIENTS]
		IF EXISTS (SELECT 1 FROM [SYS].[TABLES] WHERE [SCHEMA_ID] = @SCHEMA_REF_ID AND [name] = N'PATIENTS') BEGIN
			DELETE FROM [REF].[PATIENTS];
			PRINT N'[✓] TABLE [' + @SCHEMA_REF_NAME + '].[PATIENTS] WAS CLEARED: ' + CAST(@@rowcount AS VARCHAR) + ' ROWS WAS AFFECTED';
		END;
		-- CLEAR [MEDICAL_CARDS]
		IF EXISTS (SELECT 1 FROM [SYS].[TABLES] WHERE [SCHEMA_ID] = @SCHEMA_REF_ID AND [name] = N'MEDICAL_CARDS') BEGIN
			DELETE FROM [REF].[MEDICAL_CARDS];
			PRINT N'[✓] TABLE [' + @SCHEMA_REF_NAME + '].[MEDICAL_CARDS] WAS CLEARED: ' + CAST(@@rowcount AS VARCHAR) + ' ROWS WAS AFFECTED';
		END;
		-- CLEAR [PERSONS]
		IF EXISTS (SELECT 1 FROM [SYS].[TABLES] WHERE [SCHEMA_ID] = @SCHEMA_REF_ID AND [name] = N'PERSONS') BEGIN
			DELETE FROM [REF].[PERSONS] WHERE [EMAIL] LIKE 'test_%';
			PRINT N'[✓] TABLE [' + @SCHEMA_REF_NAME + '].[PERSONS] WAS CLEARED: ' + CAST(@@rowcount AS VARCHAR) + ' ROWS WAS AFFECTED';
		END;
	END;
	-- COMMIT
	IF (@IS_COMMIT = 1) BEGIN
		COMMIT TRAN;
		PRINT N'[✓] JOB WAS COMMITTED';
	END ELSE BEGIN
		ROLLBACK TRAN;
		PRINT N'[x] JOB WAS ROLLBACKED';
	END;
END;
------------------------------------------------------------------------------------------------------------------------
