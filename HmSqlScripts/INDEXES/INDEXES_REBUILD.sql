------------------------------------------------------------------------------------------------------------------------
-- INDEXES_REBUILD
------------------------------------------------------------------------------------------------------------------------
SET NOCOUNT ON;
SET ANSI_NULLS ON;
SET QUOTED_IDENTIFIER ON;
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
PRINT N'[ ] SET TRANSACTION ISOLATION LEVEL READ COMMITTED';
DECLARE @DB_NAME_CUR VARCHAR(128) = NULL;
DECLARE @DB_NAME_DEV VARCHAR(128) = 'HRM_DEMO_DEV';
DECLARE @DB_NAME_PROD VARCHAR(128) = 'HRM_DEMO_PROD';
DECLARE @SCHEMA_REF_NAME VARCHAR(128) = 'REF';
DECLARE @SCHEMA_DIM_NAME VARCHAR(128) = 'DIM';
DECLARE @SCHEMA_REF_ID INT = (SELECT [SCHEMA_ID] FROM [SYS].[SCHEMAS] WHERE [NAME] = @SCHEMA_REF_NAME);
DECLARE @SCHEMA_DIM_ID INT = (SELECT [SCHEMA_ID] FROM [SYS].[SCHEMAS] WHERE [NAME] = @SCHEMA_DIM_NAME);
DECLARE @CMD NVARCHAR(MAX);
DECLARE @INDEX SYSNAME;
DECLARE @INDEXES TABLE([SCHEMA] SYSNAME NULL, [TABLE] SYSNAME NOT NULL, [COLUMN] SYSNAME NOT NULL, [INDEX_ID] INT NOT NULL, [INDEX] SYSNAME NULL, 
	[TYPE_DESC] NVARCHAR(256) NULL);
------------------------------------------------------------------------------------------------------------------------
DECLARE @IS_ACTION BIT = 1;
DECLARE @IS_COMMIT BIT = 1;
------------------------------------------------------------------------------------------------------------------------
IF (@IS_ACTION = 0) BEGIN
	PRINT N'[x] ACTION IS DISABLED';
END ELSE BEGIN
	BEGIN TRAN
	-- CHECK DB
	SET @DB_NAME_CUR = (SELECT DB_NAME());
	IF NOT (@DB_NAME_CUR = @DB_NAME_DEV OR @DB_NAME_CUR = @DB_NAME_PROD) BEGIN
		PRINT N'[x] CURRENT DB [' + @DB_NAME_CUR + '] IS NOT CORRECT';
	END ELSE BEGIN
		PRINT N'[✓] CURRENT DB [' + @DB_NAME_CUR + '] IS CORRECT';
		---------------------------------------------------------------------------------------------------------------------
		-- [INDEXES]
		INSERT INTO @INDEXES([SCHEMA], [TABLE], [COLUMN], [INDEX_ID], [INDEX], [TYPE_DESC])
		SELECT (CASE 
				WHEN [T].[schema_id] = @SCHEMA_REF_ID THEN @SCHEMA_REF_NAME
				WHEN [T].[schema_id] = @SCHEMA_DIM_ID THEN @SCHEMA_DIM_NAME
				ELSE NULL END)
			,[T].[name] [TABLE]
			,[COL].[name] [COLUMN]
			,[IND].[index_id] [INDEX_ID]
			,[IND].[name] [INDEX]
			,[IND].[type_desc] [TYPE_DESC]
		FROM [sys].[indexes] [IND]
		INNER JOIN [sys].[index_columns] [IC] ON [IND].[object_id] = [IC].[object_id] AND [IND].[index_id] = [IC].[index_id]
		INNER JOIN [sys].[columns] [COL] ON [IC].[object_id] = [COL].[object_id] AND [IC].[column_id] = [COL].[column_id]
		INNER JOIN [sys].[tables] [T] ON [IND].[object_id] = [T].[object_id];
		---------------------------------------------------------------------------------------------------------------------
		-- PERSONS
		PRINT N'[✓] TABLE [PERSONS]';
		-- [PERSONS] & [DT_CREATE]
		IF ((SELECT [INDEX] FROM @INDEXES WHERE [SCHEMA] = @SCHEMA_REF_NAME AND [INDEX] = 'IX_PERSONS_DT_CREATE') IS NOT NULL) BEGIN
			ALTER INDEX [IX_PERSONS_DT_CREATE] ON [REF].[PERSONS] REBUILD PARTITION = ALL 
				WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON);
			PRINT N'[✓] REBUILD INDEX [IX_PERSONS_DT_CREATE]';
		END;
		-- [PERSONS] & [DT_CHANGE]
		IF ((SELECT [INDEX] FROM @INDEXES WHERE [SCHEMA] = @SCHEMA_REF_NAME AND [INDEX] = 'IX_PERSONS_DT_CHANGE') IS NOT NULL) BEGIN
			ALTER INDEX [IX_PERSONS_DT_CHANGE] ON [REF].[PERSONS] REBUILD PARTITION = ALL 
				WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON);
			PRINT N'[✓] REBUILD INDEX [IX_PERSONS_DT_CHANGE]';
		END;
		-- [PERSONS] & [FAMILY]
		IF ((SELECT [INDEX] FROM @INDEXES WHERE [SCHEMA] = @SCHEMA_REF_NAME AND [INDEX] = 'IX_PERSONS_FAMILY') IS NOT NULL) BEGIN
			ALTER INDEX [IX_PERSONS_DT_CHANGE] ON [REF].[PERSONS] REBUILD PARTITION = ALL 
				WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON);
			PRINT N'[✓] REBUILD INDEX [IX_PERSONS_FAMILY]';
		END;
		-- [PERSONS] & [NAME]
		IF ((SELECT [INDEX] FROM @INDEXES WHERE [SCHEMA] = @SCHEMA_REF_NAME AND [INDEX] = 'IX_PERSONS_NAME') IS NOT NULL) BEGIN
			ALTER INDEX [IX_PERSONS_NAME] ON [REF].[PERSONS] REBUILD PARTITION = ALL 
				WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON);
			PRINT N'[✓] REBUILD INDEX [IX_PERSONS_NAME]';
		END;
		-- [PERSONS] & [SURNAME]
		IF ((SELECT [INDEX] FROM @INDEXES WHERE [SCHEMA] = @SCHEMA_REF_NAME AND [INDEX] = 'IX_PERSONS_SURNAME') IS NOT NULL) BEGIN
			ALTER INDEX [IX_PERSONS_SURNAME] ON [REF].[PERSONS] REBUILD PARTITION = ALL 
				WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON);
			PRINT N'[✓] REBUILD INDEX [IX_PERSONS_SURNAME]';
		END;
		-- [PERSONS] & [GENDER]
		IF ((SELECT [INDEX] FROM @INDEXES WHERE [SCHEMA] = @SCHEMA_REF_NAME AND [INDEX] = 'IX_PERSONS_GENDER') IS NOT NULL) BEGIN
			ALTER INDEX [IX_PERSONS_GENDER] ON [REF].[PERSONS] REBUILD PARTITION = ALL 
				WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON);
			PRINT N'[✓] REBUILD INDEX [IX_PERSONS_GENDER]';
		END;
		-- [PERSONS] & [DT_BIRTH]
		IF ((SELECT [INDEX] FROM @INDEXES WHERE [SCHEMA] = @SCHEMA_REF_NAME AND [INDEX] = 'IX_PERSONS_DT_BIRTH') IS NOT NULL) BEGIN
			ALTER INDEX [IX_PERSONS_DT_BIRTH] ON [REF].[PERSONS] REBUILD PARTITION = ALL 
				WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON);
			PRINT N'[✓] REBUILD INDEX [IX_PERSONS_DT_BIRTH]';
		END;
		-- [PERSONS] & [CELLPHONE]
		IF ((SELECT [INDEX] FROM @INDEXES WHERE [SCHEMA] = @SCHEMA_REF_NAME AND [INDEX] = 'IX_PERSONS_CELLPHONE') IS NOT NULL) BEGIN
			ALTER INDEX [IX_PERSONS_CELLPHONE] ON [REF].[PERSONS] REBUILD PARTITION = ALL 
				WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON);
			PRINT N'[✓] REBUILD INDEX [IX_PERSONS_CELLPHONE]';
		END;
		-- [PERSONS] & [EMAIL]
		IF ((SELECT [INDEX] FROM @INDEXES WHERE [SCHEMA] = @SCHEMA_REF_NAME AND [INDEX] = 'AK_PERSONS_EMAIL') IS NOT NULL) BEGIN
			ALTER INDEX [AK_PERSONS_EMAIL] ON [REF].[PERSONS] REBUILD PARTITION = ALL 
				WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON);
			PRINT N'[✓] REBUILD INDEX [AK_PERSONS_EMAIL]';
		END;
		---------------------------------------------------------------------------------------------------------------------
	END;
	-- COMMIT
	IF (@IS_COMMIT = 1) BEGIN
		COMMIT TRAN;
		PRINT N'[✓] JOB WAS COMMITTED';
	END ELSE BEGIN
		ROLLBACK TRAN;
		PRINT N'[x] JOB WAS ROLLBACKED';
	END;
END;
------------------------------------------------------------------------------------------------------------------------
